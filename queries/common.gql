fragment PageInfo on PageInfo {
  page
  limit
  nextCursor
  beforeCursor
  hasNext
  hasBefore
  totalCount
  totalPages
  direction
}

query specialization {
  specializations {
    data {
      id
      arName
      enName
      role
      enGeneralName
      classifications {
        id
        localizedName
      }
      localizedName
      localizedGeneralName
    }
    code
    success
    message
  }
}

query GetNationalities {
  nationalities {
    data {
      id
      arName
      enName
    }
    code
    success
    message
  }
}
query GetCountries {
  countries(enableCities: true) {
    data {
      arName
      enName
      isoCode
    }
  }
}

query GetCitiesByCountryIsoCode($countryIsoCode: String!) {
  citiesByCountryIsoCode(countryIsoCode: $countryIsoCode) {
    data {
      id
      arName
      enName
    }
  }
}

query GetLanguages {
  languages {
    data {
      code
      name
    }
  }
}
query getSpecialization($role: ConsultantsRoleEnum!) {
  specializationByConsultantRole(role: $role) {
    data {
      id
      arName
      enName
      arGeneralName
      enGeneralName
      classifications {
        id
        arName
        enName
        arAlias
        enAlias
        fullClassificationText
      }
      evaluationQuestions {
        id
        arQuestion
        enQuestion
        isOptional
      }
    }
  }
}
query availableClassificationTiersByClassification(
  $input: AvailableClassificationTiersInput!
) {
  availableClassificationTiersByClassification(input: $input) {
    data {
      id
      name
      pricePer30Mins

      isVip
    }
    code
    success
    message
  }
}

query minAndMaxAmountSpentByUser {
  minAndMaxAmountSpentByUser {
    message
    code
    success
    data {
      minAmount
      maxAmount
    }
  }
}
query packages {
  packages {
    data {
      id
      enName
      availableAppointmentsCount
    }
    code
    success
    message
  }
}

query specialtiesBySpecialization($id: ID!) {
  specialtiesBySpecialization(specializationId: $id) {
    data {
      id
      arName
      enName
    }
    code
    success
    message
  }
}

mutation generateUploadLink(
  $contentType: String!
  $model: FileModelEnum!
  $fileName: String!
  $sizeInBytes: Float!
) {
  generateUploadLink(
    input: {
      contentType: $contentType
      fileName: $fileName
      model: $model
      sizeInBytes: $sizeInBytes
    }
  ) {
    data
    code
    success
    message
  }
}
